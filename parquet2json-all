#!/usr/bin/env bash

set -eo pipefail

args=("$@")

err() {
  echo "$@" >&2
}
usage() {
  err "Usage: $(basename "$0") [-n <n_rows=10>] [-o <offset>] [-s] <path>"
  err "  -n: number of rows to display (negative ⇒ all rows)"
  err "  -o: offset (skip) rows; negative ⇒ last rows"
  err "  -s: compact mode (one object per line)"
  err
  err 'Opts passed via $PQT_TXT_OPTS will override those passed via CLI (to allow for configuring `git show`):'
  err
  err 'The "opts var" itself ("PQT_TXT_OPTS" by default) can also be customized, by setting `$PQT_TXT_OPTS_VAR`, e.g.:'
  err
  err '  export PQT_TXT_OPTS_VAR=PQT  # This can be done once, e.g. in your .bashrc'
  err '  PQT="-sn3" git show          # Shorter var name can then be used to configure diffs rendered by `git show` (in this case: compact output, 3 rows)'
  exit 127
}

n_rows=10
offset=()
print_cmd="jq"
parse() {
  OPTIND=1
  while getopts "hn:o:s" opt; do
    case $opt in
      h) usage ;;
      n) n_rows="$OPTARG" ;;
      o) offset=(-o"$OPTARG") ;;
      s) print_cmd="cat" ;;
      *) usage ;;
    esac
  done
}

parse "$@"
shift $((OPTIND-1))

OPTS_VAR="${PQT_TXT_OPTS_VAR:-PQT_TXT_OPTS}"
OPTS="${!OPTS_VAR}"
if [ -n "$OPTS" ]; then
  IFS=' ' read -ra opts <<< "$OPTS"
  parse "${opts[@]}"
fi

if [ "$n_rows" -lt 0 ]; then
  rows=()
else
  rows=(-l "$n_rows")
fi

if [ $# -eq 0 ] || { [ $# -eq 1 ] && [ "$1" == "-" ]; }; then
  path="$(mktemp)"
  trap 'rm -f "$path"' EXIT
  cat > "$path"
elif [ $# -eq 1 ]; then
  path="$1"
  if ! [ -e "$path" ]; then
    echo "File not found: $path" >&2
    exit 127
  fi
else
  echo "Too many arguments: $#" >&2
  usage
fi

echo "MD5: $(md5sum "$path" | cut -d' ' -f1)"
echo "$(stat -c %s "$path") bytes"
echo "$(parquet-2-json.sh rowcount "$path") rows"
parquet-2-json.sh schema "$path"
parquet-2-json.sh cat "${rows[@]}" "${offset[@]}" "$path" | "$print_cmd"
